/**
 * The demo shows how to use the code generated by protoc 
 */
const Schema = require('./event_pb');

//create an instance of event and set its attributes
const event = new Schema.Event();
event.setData('hello protocol buffer');
event.setSelfparent('QmTUnVs1EkAmCz78CXeytAiU5YXc9hHwub8ZdkE7fxWoQW');
event.setParent('QmTUnVs1EkAmCz78CXeytAiU5YXc9hHwub8ZdkE7fxWoQq');

//create another instance of event and set its attributes
const event1 = new Schema.Event();
event1.setData('hello protocol buffer agin');
event1.setSelfparent('QmTUnVs1EkAmCz78CXeytAiU5YXc9hHwub8ZdkE7fxWoQW');
event1.setParent('QmTUnVs1EkAmCz78CXeytAiU5YXc9hHwub8ZdkE7fxWoQq');

//create the events collection
const events = new Schema.Message();
events.addEvents(event);
events.addEvents(event1);
console.log(events);

//consume its attributes
console.log(event);
console.log('the data contained in the event is ',event.getData());

//serialize object to bytes
let bytes = events.serializeBinary();
console.log('binary of events'+bytes);

//serialize bytes to Message
let result = Schema.Message.deserializeBinary(bytes);
console.log('after deserializing',result);

//to iterate the array
console.log('event',result.array[0][0]);
console.log('event',result.array[0][1]);
